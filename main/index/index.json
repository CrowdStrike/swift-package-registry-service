{"includedArchiveIdentifiers":["App"],"interfaceLanguages":{"swift":[{"children":[{"title":"Essentials","type":"groupMarker"},{"path":"\/documentation\/app\/gettingstarted","title":"Getting started","type":"article"},{"path":"\/documentation\/app\/configuringspm","title":"Configuring Swift Package Manager","type":"article"},{"path":"\/documentation\/app\/githubapi","title":"Github API","type":"article"},{"path":"\/documentation\/app\/architecture","title":"Architecture","type":"article"},{"path":"\/documentation\/app\/specificationsupport","title":"Specification Support","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/databaseactor\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/databaseactor\/addcachedpackagemanifests(_:logger:database:)","title":"func addCachedPackageManifests([CachedPackageManifest], logger: Logger, database: any Database) async throws","type":"method"},{"path":"\/documentation\/app\/databaseactor\/addrepository(_:logger:database:)","title":"func addRepository(GithubAPIClient.Repository, logger: Logger, database: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/databaseactor\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/app\/databaseactor\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/app\/databaseactor\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/app\/databaseactor\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/app\/databaseactor","title":"DatabaseActor","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/identifiersactor\/init(packageidloader:)","title":"init(packageIDLoader: IdentifiersActor.PackageIDLoader)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/identifiersactor\/loadpackageid(githuburl:logger:database:)","title":"func loadPackageID(githubURL: GithubURL, logger: Logger, database: any Database) async throws -> String?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/identifiersactor\/packageidloader","title":"IdentifiersActor.PackageIDLoader","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/identifiersactor\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/app\/identifiersactor\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/app\/identifiersactor\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/app\/identifiersactor\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/app\/identifiersactor","title":"IdentifiersActor","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/manifest\/init()","title":"init()","type":"init"},{"path":"\/documentation\/app\/manifest\/init(id:packagescope:packagename:packageversion:swiftversion:swifttoolsversion:cachefilename:)","title":"init(id: UUID?, packageScope: String, packageName: String, packageVersion: String, swiftVersion: String?, swiftToolsVersion: String, cacheFileName: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/manifest\/ascachedpackagemanifest","title":"var asCachedPackageManifest: CachedPackageManifest","type":"property"},{"path":"\/documentation\/app\/manifest\/cachefilename","title":"var cacheFileName: String","type":"property"},{"path":"\/documentation\/app\/manifest\/id-swift.property","title":"var id: UUID?","type":"property"},{"path":"\/documentation\/app\/manifest\/packagename","title":"var packageName: String","type":"property"},{"path":"\/documentation\/app\/manifest\/packagescope","title":"var packageScope: String","type":"property"},{"path":"\/documentation\/app\/manifest\/packageversion","title":"var packageVersion: String","type":"property"},{"path":"\/documentation\/app\/manifest\/swifttoolsversion","title":"var swiftToolsVersion: String","type":"property"},{"path":"\/documentation\/app\/manifest\/swiftversion","title":"var swiftVersion: String?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/manifest\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/manifest\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/manifest\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/manifest\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/app\/manifest\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/manifest\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/app\/manifest\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/manifest\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/app\/manifest\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/manifest\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/app\/manifest\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/manifest\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/app\/manifest\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/app\/manifest\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/app\/manifest\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/manifest\/collectinput(withdefaultedvalues:)","title":"func collectInput(withDefaultedValues: Bool) -> [FieldKey : DatabaseQuery.Value]","type":"method"},{"path":"\/documentation\/app\/manifest\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/app\/manifest\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/manifest\/boolean","title":"Manifest.Boolean","type":"typealias"},{"path":"\/documentation\/app\/manifest\/enum","title":"Manifest.Enum","type":"typealias"},{"path":"\/documentation\/app\/manifest\/field","title":"Manifest.Field","type":"typealias"},{"path":"\/documentation\/app\/manifest\/group","title":"Manifest.Group","type":"typealias"},{"path":"\/documentation\/app\/manifest\/optionalboolean","title":"Manifest.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/app\/manifest\/optionalenum","title":"Manifest.OptionalEnum","type":"typealias"},{"path":"\/documentation\/app\/manifest\/optionalfield","title":"Manifest.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/manifest\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/manifest\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/app\/manifest\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/manifest\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/app\/manifest\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/manifest\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/manifest\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/manifest\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/app\/manifest\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/manifest\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/manifest\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/manifest\/children","title":"Manifest.Children","type":"typealias"},{"path":"\/documentation\/app\/manifest\/compositechildren","title":"Manifest.CompositeChildren","type":"typealias"},{"path":"\/documentation\/app\/manifest\/compositeid","title":"Manifest.CompositeID","type":"typealias"},{"path":"\/documentation\/app\/manifest\/compositeoptionalchild","title":"Manifest.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/app\/manifest\/compositeoptionalparent","title":"Manifest.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/app\/manifest\/compositeparent","title":"Manifest.CompositeParent","type":"typealias"},{"path":"\/documentation\/app\/manifest\/id-swift.typealias","title":"Manifest.ID","type":"typealias"},{"path":"\/documentation\/app\/manifest\/optionalchild","title":"Manifest.OptionalChild","type":"typealias"},{"path":"\/documentation\/app\/manifest\/optionalparent","title":"Manifest.OptionalParent","type":"typealias"},{"path":"\/documentation\/app\/manifest\/parent","title":"Manifest.Parent","type":"typealias"},{"path":"\/documentation\/app\/manifest\/siblings","title":"Manifest.Siblings","type":"typealias"},{"path":"\/documentation\/app\/manifest\/timestamp","title":"Manifest.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/manifest\/find(_:on:)-4rx5w","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/app\/manifest\/find(_:on:)-5nlxp","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/app\/manifest\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/app\/manifest\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/manifest\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/app\/manifest\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/app\/manifest\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/app\/manifest\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/app\/manifest","title":"Manifest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/memorycacheactor\/init(dataloader:)","title":"init(dataLoader: MemoryCacheActor<T>.DataLoader)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/memorycacheactor\/loaddata(owner:repo:version:fileio:database:logger:)","title":"func loadData(owner: String, repo: String, version: Version, fileIO: FileIO, database: any Database, logger: Logger) async throws -> T","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/memorycacheactor\/dataloader","title":"MemoryCacheActor.DataLoader","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/memorycacheactor\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/app\/memorycacheactor\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/app\/memorycacheactor\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/app\/memorycacheactor\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/app\/memorycacheactor","title":"MemoryCacheActor","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/problemdetailserrormiddleware\/init(_:)","title":"init((Request, any Error) -> (Response))","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/problemdetailserrormiddleware\/respond(to:chainingto:)","title":"func respond(to: Request, chainingTo: any Responder) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/problemdetailserrormiddleware\/default(environment:)","title":"static func `default`(environment: Environment) -> ErrorMiddleware","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/problemdetailserrormiddleware\/makeresponder(chainingto:)","title":"func makeResponder(chainingTo: any Responder) -> any Responder","type":"method"}],"path":"\/documentation\/app\/problemdetailserrormiddleware\/middleware-implementations","title":"Middleware Implementations","type":"symbol"}],"path":"\/documentation\/app\/problemdetailserrormiddleware","title":"ProblemDetailsErrorMiddleware","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/repository\/init()","title":"init()","type":"init"},{"path":"\/documentation\/app\/repository\/init(id:htmlurl:cloneurl:sshurl:)","title":"init(id: Int64, htmlUrl: String, cloneUrl: String, sshUrl: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/repository\/cloneurl","title":"var cloneUrl: String","type":"property"},{"path":"\/documentation\/app\/repository\/htmlurl","title":"var htmlUrl: String","type":"property"},{"path":"\/documentation\/app\/repository\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/app\/repository\/sshurl","title":"var sshUrl: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/repository\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/repository\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/repository\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/repository\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/app\/repository\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/repository\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/app\/repository\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/repository\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/app\/repository\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/repository\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/app\/repository\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/repository\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/app\/repository\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/app\/repository\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/app\/repository\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/repository\/collectinput(withdefaultedvalues:)","title":"func collectInput(withDefaultedValues: Bool) -> [FieldKey : DatabaseQuery.Value]","type":"method"},{"path":"\/documentation\/app\/repository\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/app\/repository\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/repository\/boolean","title":"Repository.Boolean","type":"typealias"},{"path":"\/documentation\/app\/repository\/enum","title":"Repository.Enum","type":"typealias"},{"path":"\/documentation\/app\/repository\/field","title":"Repository.Field","type":"typealias"},{"path":"\/documentation\/app\/repository\/group","title":"Repository.Group","type":"typealias"},{"path":"\/documentation\/app\/repository\/optionalboolean","title":"Repository.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/app\/repository\/optionalenum","title":"Repository.OptionalEnum","type":"typealias"},{"path":"\/documentation\/app\/repository\/optionalfield","title":"Repository.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/repository\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/repository\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/app\/repository\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/repository\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/app\/repository\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/repository\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/repository\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/repository\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/app\/repository\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/repository\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/repository\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/repository\/children","title":"Repository.Children","type":"typealias"},{"path":"\/documentation\/app\/repository\/compositechildren","title":"Repository.CompositeChildren","type":"typealias"},{"path":"\/documentation\/app\/repository\/compositeid","title":"Repository.CompositeID","type":"typealias"},{"path":"\/documentation\/app\/repository\/compositeoptionalchild","title":"Repository.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/app\/repository\/compositeoptionalparent","title":"Repository.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/app\/repository\/compositeparent","title":"Repository.CompositeParent","type":"typealias"},{"path":"\/documentation\/app\/repository\/id-swift.typealias","title":"Repository.ID","type":"typealias"},{"path":"\/documentation\/app\/repository\/optionalchild","title":"Repository.OptionalChild","type":"typealias"},{"path":"\/documentation\/app\/repository\/optionalparent","title":"Repository.OptionalParent","type":"typealias"},{"path":"\/documentation\/app\/repository\/parent","title":"Repository.Parent","type":"typealias"},{"path":"\/documentation\/app\/repository\/siblings","title":"Repository.Siblings","type":"typealias"},{"path":"\/documentation\/app\/repository\/timestamp","title":"Repository.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/repository\/find(_:on:)-7z7ky","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/app\/repository\/find(_:on:)-9lg0t","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/app\/repository\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/app\/repository\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/repository\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/app\/repository\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/app\/repository\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/app\/repository\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/app\/repository","title":"Repository","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/tagsactor\/init(memorycacheexpiration:getdatenow:tagfileloader:)","title":"init(memoryCacheExpiration: TimeInterval, getDateNow: TagsActor.GetDateNow, tagFileLoader: TagsActor.TagFileLoader)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/tagsactor\/loadtagfile(owner:repo:forcesync:logger:)","title":"func loadTagFile(owner: String, repo: String, forceSync: Bool, logger: Logger) async throws -> PersistenceClient.TagFile","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/tagsactor\/getdatenow","title":"TagsActor.GetDateNow","type":"typealias"},{"path":"\/documentation\/app\/tagsactor\/tagfileloader","title":"TagsActor.TagFileLoader","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/tagsactor\/defaultmemorycacheexpiration","title":"static let defaultMemoryCacheExpiration: TimeInterval","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/tagsactor\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/app\/tagsactor\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/app\/tagsactor\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/app\/tagsactor\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/app\/tagsactor","title":"TagsActor","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/cachedpackagemanifest\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/app\/cachedpackagemanifest\/init(packagemanifest:cachefilename:)","title":"init(packageManifest: PackageManifest, cacheFileName: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/cachedpackagemanifest\/asmanifestfile","title":"var asManifestFile: APIUtilities.Manifest.File","type":"property"},{"path":"\/documentation\/app\/cachedpackagemanifest\/asmanifestfilename","title":"var asManifestFileName: APIUtilities.Manifest.FileName","type":"property"},{"path":"\/documentation\/app\/cachedpackagemanifest\/cachefilename","title":"var cacheFileName: String","type":"property"},{"path":"\/documentation\/app\/cachedpackagemanifest\/packagemanifest","title":"var packageManifest: PackageManifest","type":"property"},{"path":"\/documentation\/app\/cachedpackagemanifest\/queryarguments","title":"var queryArguments: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/cachedpackagemanifest\/linkheadervalue(for:)","title":"func linkHeaderValue(for: Request) throws -> String","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/app\/cachedpackagemanifest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/app\/cachedpackagemanifest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/app\/cachedpackagemanifest","title":"CachedPackageManifest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/createmanifests\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/createmanifests\/prepare(on:)-3me39","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/app\/createmanifests\/revert(on:)-a2sv","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/createmanifests\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/app\/createmanifests\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/createmanifests\/prepare(on:)-9v2ib","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/createmanifests\/revert(on:)-8ku68","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/app\/createmanifests\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/app\/createmanifests","title":"CreateManifests","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/createrepositories\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/createrepositories\/prepare(on:)-46or4","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/app\/createrepositories\/revert(on:)-4kx98","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/createrepositories\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/app\/createrepositories\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/createrepositories\/prepare(on:)-hpwn","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/app\/createrepositories\/revert(on:)-5r7e9","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/app\/createrepositories\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/app\/createrepositories","title":"CreateRepositories","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/customrouteloggingmiddleware\/init(loglevel:)","title":"init(logLevel: Logger.Level)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/customrouteloggingmiddleware\/loglevel","title":"let logLevel: Logger.Level","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/customrouteloggingmiddleware\/respond(to:chainingto:)-8j5e2","title":"func respond(to: Request, chainingTo: any AsyncResponder) async throws -> Response","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/customrouteloggingmiddleware\/respond(to:chainingto:)-8f515","title":"func respond(to: Request, chainingTo: any Responder) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/app\/customrouteloggingmiddleware\/asyncmiddleware-implementations","title":"AsyncMiddleware Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/customrouteloggingmiddleware\/makeresponder(chainingto:)","title":"func makeResponder(chainingTo: any Responder) -> any Responder","type":"method"}],"path":"\/documentation\/app\/customrouteloggingmiddleware\/middleware-implementations","title":"Middleware Implementations","type":"symbol"}],"path":"\/documentation\/app\/customrouteloggingmiddleware","title":"CustomRouteLoggingMiddleware","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/organization-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/organization-swift.struct\/init(name:email:description:url:)","title":"init(name: String, email: String?, description: String?, url: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/organization-swift.struct\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/organization-swift.struct\/email","title":"var email: String?","type":"property"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/organization-swift.struct\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/organization-swift.struct\/url","title":"var url: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/organization-swift.struct\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/organization-swift.struct\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/organization-swift.struct\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/organization-swift.struct\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/organization-swift.struct\/decoderequest(_:)-2x84n","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/organization-swift.struct\/decoderequest(_:)-om55","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/organization-swift.struct\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/organization-swift.struct\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/organization-swift.struct\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/organization-swift.struct","title":"FetchReleaseMetadata.Metadata.Author.Organization","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/init(name:email:description:organization:url:)","title":"init(name: String, email: String?, description: String?, organization: FetchReleaseMetadata.Metadata.Author.Organization?, url: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/email","title":"var email: String?","type":"property"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/organization-swift.property","title":"var organization: FetchReleaseMetadata.Metadata.Author.Organization?","type":"property"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/url","title":"var url: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/decoderequest(_:)-11qlf","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/decoderequest(_:)-7wkpv","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.struct","title":"FetchReleaseMetadata.Metadata.Author","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/init()","title":"init()","type":"init"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/init(author:description:licenseurl:originalpublicationtime:readmeurl:repositoryurls:)","title":"init(author: FetchReleaseMetadata.Metadata.Author?, description: String?, licenseURL: String?, originalPublicationTime: Date?, readmeURL: String?, repositoryURLs: [String]?)","type":"init"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/author-swift.property","title":"var author: FetchReleaseMetadata.Metadata.Author?","type":"property"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/licenseurl","title":"var licenseURL: String?","type":"property"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/originalpublicationtime","title":"var originalPublicationTime: Date?","type":"property"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/readmeurl","title":"var readmeURL: String?","type":"property"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/repositoryurls","title":"var repositoryURLs: [String]?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/metadata(scope:name:)","title":"static func metadata(scope: String, name: String) -> FetchReleaseMetadata.Metadata","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/decoderequest(_:)-404ha","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/decoderequest(_:)-9q5c3","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.struct","title":"FetchReleaseMetadata.Metadata","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/signing-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/signing-swift.struct\/init(signaturebase64encoded:signatureformat:)","title":"init(signatureBase64Encoded: String, signatureFormat: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/signing-swift.struct\/signaturebase64encoded","title":"var signatureBase64Encoded: String","type":"property"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/signing-swift.struct\/signatureformat","title":"var signatureFormat: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/signing-swift.struct\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/signing-swift.struct\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/signing-swift.struct\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/signing-swift.struct\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/signing-swift.struct\/decoderequest(_:)-18nwv","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/signing-swift.struct\/decoderequest(_:)-5kzfs","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/signing-swift.struct\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/signing-swift.struct\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/signing-swift.struct\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/signing-swift.struct","title":"FetchReleaseMetadata.Resource.Signing","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/init(name:type:checksum:signing:)","title":"init(name: String, type: String, checksum: String, signing: FetchReleaseMetadata.Resource.Signing?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/checksum","title":"var checksum: String","type":"property"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/signing-swift.property","title":"var signing: FetchReleaseMetadata.Resource.Signing?","type":"property"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/type","title":"var type: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/applicationzip","title":"static let applicationZip: String","type":"property"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/sourcearchive","title":"static let sourceArchive: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/sourcearchive(withchecksum:)","title":"static func sourceArchive(withChecksum: String) -> FetchReleaseMetadata.Resource","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/decoderequest(_:)-304ex","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/decoderequest(_:)-30in5","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/app\/fetchreleasemetadata\/resource\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/app\/fetchreleasemetadata\/resource","title":"FetchReleaseMetadata.Resource","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/app\/fetchreleasemetadata\/init(id:version:resources:metadata:publishedat:)","title":"init(id: String, version: String, resources: [FetchReleaseMetadata.Resource], metadata: FetchReleaseMetadata.Metadata, publishedAt: Date?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/app\/fetchreleasemetadata\/metadata-swift.property","title":"var metadata: FetchReleaseMetadata.Metadata","type":"property"},{"path":"\/documentation\/app\/fetchreleasemetadata\/publishedat","title":"var publishedAt: Date?","type":"property"},{"path":"\/documentation\/app\/fetchreleasemetadata\/resources","title":"var resources: [FetchReleaseMetadata.Resource]","type":"property"},{"path":"\/documentation\/app\/fetchreleasemetadata\/version","title":"var version: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/mock","title":"static let mock: FetchReleaseMetadata","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/encoderesponse(for:)-9p84t","title":"func encodeResponse(for: Request) async throws -> Response","type":"method"}],"path":"\/documentation\/app\/fetchreleasemetadata\/asyncresponseencodable-implementations","title":"AsyncResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/app\/fetchreleasemetadata\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/app\/fetchreleasemetadata\/encoderesponse(for:)-7tjb4","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/decoderequest(_:)-3jr27","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/app\/fetchreleasemetadata\/decoderequest(_:)-75aam","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/app\/fetchreleasemetadata\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/fetchreleasemetadata\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/app\/fetchreleasemetadata\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/app\/fetchreleasemetadata","title":"FetchReleaseMetadata","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/listpackagereleases\/release\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/app\/listpackagereleases\/release\/init(url:problem:)","title":"init(url: String?, problem: ProblemDetails?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/listpackagereleases\/release\/problem","title":"var problem: ProblemDetails?","type":"property"},{"path":"\/documentation\/app\/listpackagereleases\/release\/url","title":"var url: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/listpackagereleases\/release\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/app\/listpackagereleases\/release\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/app\/listpackagereleases\/release\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/listpackagereleases\/release\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/listpackagereleases\/release\/decoderequest(_:)-1hfsq","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/app\/listpackagereleases\/release\/decoderequest(_:)-3yl9z","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/app\/listpackagereleases\/release\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/listpackagereleases\/release\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/app\/listpackagereleases\/release\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/app\/listpackagereleases\/release","title":"ListPackageReleases.Release","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/listpackagereleases\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/app\/listpackagereleases\/init(linkheader:versions:)","title":"init(linkHeader: String?, versions: [Version])","type":"init"},{"path":"\/documentation\/app\/listpackagereleases\/init(releases:)","title":"init(releases: [String : ListPackageReleases.Release])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/listpackagereleases\/linkheader","title":"var linkHeader: String?","type":"property"},{"path":"\/documentation\/app\/listpackagereleases\/releases","title":"var releases: [String : ListPackageReleases.Release]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/listpackagereleases\/fixupurls(serverurl:scope:name:)","title":"func fixupURLs(serverURL: String, scope: String, name: String)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/listpackagereleases\/mock","title":"static let mock: ListPackageReleases","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/app\/listpackagereleases\/codingkeys\/releases","title":"case releases","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/listpackagereleases\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/app\/listpackagereleases\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/app\/listpackagereleases\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/listpackagereleases\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/app\/listpackagereleases\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/app\/listpackagereleases\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/app\/listpackagereleases\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/app\/listpackagereleases\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/listpackagereleases\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/listpackagereleases\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/app\/listpackagereleases\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/app\/listpackagereleases\/codingkeys","title":"ListPackageReleases.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/listpackagereleases\/encoderesponse(for:)-9vqlg","title":"func encodeResponse(for: Request) async throws -> Response","type":"method"}],"path":"\/documentation\/app\/listpackagereleases\/asyncresponseencodable-implementations","title":"AsyncResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/listpackagereleases\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/app\/listpackagereleases\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/app\/listpackagereleases\/encoderesponse(for:)-5x6sd","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/listpackagereleases\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/listpackagereleases\/decoderequest(_:)-1ki2q","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/app\/listpackagereleases\/decoderequest(_:)-7z7rh","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/app\/listpackagereleases\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/listpackagereleases\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/app\/listpackagereleases\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/app\/listpackagereleases","title":"ListPackageReleases","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/loginresponse\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/app\/loginresponse\/init(success:)","title":"init(success: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/loginresponse\/success","title":"var success: Bool","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/loginresponse\/mock","title":"static let mock: LoginResponse","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/loginresponse\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/app\/loginresponse\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/app\/loginresponse\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/loginresponse\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/loginresponse\/decoderequest(_:)-99s26","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/app\/loginresponse\/decoderequest(_:)-t46e","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/app\/loginresponse\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/loginresponse\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/app\/loginresponse\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/app\/loginresponse","title":"LoginResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/lookuppackageidentifiers\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/app\/lookuppackageidentifiers\/init(identifiers:)","title":"init(identifiers: [String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/lookuppackageidentifiers\/identifiers","title":"var identifiers: [String]","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/lookuppackageidentifiers\/mock","title":"static let mock: LookupPackageIdentifiers","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/lookuppackageidentifiers\/encoderesponse(for:)-68n96","title":"func encodeResponse(for: Request) async throws -> Response","type":"method"}],"path":"\/documentation\/app\/lookuppackageidentifiers\/asyncresponseencodable-implementations","title":"AsyncResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/lookuppackageidentifiers\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/app\/lookuppackageidentifiers\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/app\/lookuppackageidentifiers\/encoderesponse(for:)-96fvj","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/lookuppackageidentifiers\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/lookuppackageidentifiers\/decoderequest(_:)-6xx07","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/app\/lookuppackageidentifiers\/decoderequest(_:)-7o941","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/app\/lookuppackageidentifiers\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/lookuppackageidentifiers\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/app\/lookuppackageidentifiers\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/app\/lookuppackageidentifiers","title":"LookupPackageIdentifiers","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/packagemanifest\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/app\/packagemanifest\/init(packagescope:packagename:packageversion:swiftversion:swifttoolsversion:)","title":"init(packageScope: String, packageName: String, packageVersion: String, swiftVersion: String?, swiftToolsVersion: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/packagemanifest\/filename","title":"var fileName: String","type":"property"},{"path":"\/documentation\/app\/packagemanifest\/hasversion","title":"var hasVersion: Bool","type":"property"},{"path":"\/documentation\/app\/packagemanifest\/isunversioned","title":"var isUnversioned: Bool","type":"property"},{"path":"\/documentation\/app\/packagemanifest\/packagename","title":"var packageName: String","type":"property"},{"path":"\/documentation\/app\/packagemanifest\/packagescope","title":"var packageScope: String","type":"property"},{"path":"\/documentation\/app\/packagemanifest\/packageversion","title":"var packageVersion: String","type":"property"},{"path":"\/documentation\/app\/packagemanifest\/swifttoolsversion","title":"var swiftToolsVersion: String","type":"property"},{"path":"\/documentation\/app\/packagemanifest\/swiftversion","title":"var swiftVersion: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/app\/packagemanifest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/app\/packagemanifest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/app\/packagemanifest","title":"PackageManifest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/packagemanifestwithcontents\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/app\/packagemanifestwithcontents\/init(packagemanifest:contents:)","title":"init(packageManifest: PackageManifest, contents: ByteBuffer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/packagemanifestwithcontents\/contents","title":"var contents: ByteBuffer","type":"property"},{"path":"\/documentation\/app\/packagemanifestwithcontents\/packagemanifest","title":"var packageManifest: PackageManifest","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/app\/packagemanifestwithcontents\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/app\/packagemanifestwithcontents\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/app\/packagemanifestwithcontents","title":"PackageManifestWithContents","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/packagename\/init(value:)","title":"init(value: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/packagename\/isvalid","title":"var isValid: Bool","type":"property"},{"path":"\/documentation\/app\/packagename\/value","title":"var value: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/packagename\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/app\/packagename\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/packagename\/init(_:)","title":"init?(String)","type":"init"}],"path":"\/documentation\/app\/packagename\/losslessstringconvertible-implementations","title":"LosslessStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/app\/packagename","title":"PackageName","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/packageregistrycontroller\/init(serverurlstring:cacherootdirectory:uuidgenerator:clientsupportspagination:githubapitoken:githubapiclient:checksumclient:httpstreamclient:persistenceclient:applogger:getdatenow:)","title":"init(serverURLString: String, cacheRootDirectory: String, uuidGenerator: UUIDGenerator, clientSupportsPagination: Bool, githubAPIToken: String, githubAPIClient: GithubAPIClient, checksumClient: ChecksumClient, httpStreamClient: HTTPStreamClient, persistenceClient: PersistenceClient, appLogger: Logger, getDateNow: PackageRegistryController.GetDateNow)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/packageregistrycontroller\/applogger","title":"let appLogger: Logger","type":"property"},{"path":"\/documentation\/app\/packageregistrycontroller\/cacherootdirectory","title":"let cacheRootDirectory: String","type":"property"},{"path":"\/documentation\/app\/packageregistrycontroller\/checksumclient","title":"let checksumClient: ChecksumClient","type":"property"},{"path":"\/documentation\/app\/packageregistrycontroller\/clientsupportspagination","title":"let clientSupportsPagination: Bool","type":"property"},{"path":"\/documentation\/app\/packageregistrycontroller\/getdatenow-swift.property","title":"let getDateNow: PackageRegistryController.GetDateNow","type":"property"},{"path":"\/documentation\/app\/packageregistrycontroller\/githubapiclient","title":"let githubAPIClient: GithubAPIClient","type":"property"},{"path":"\/documentation\/app\/packageregistrycontroller\/githubapitoken","title":"let githubAPIToken: String","type":"property"},{"path":"\/documentation\/app\/packageregistrycontroller\/httpstreamclient","title":"let httpStreamClient: HTTPStreamClient","type":"property"},{"path":"\/documentation\/app\/packageregistrycontroller\/identifiersactor","title":"let identifiersActor: IdentifiersActor","type":"property"},{"path":"\/documentation\/app\/packageregistrycontroller\/manifestsactor","title":"let manifestsActor: MemoryCacheActor<[CachedPackageManifest]>","type":"property"},{"path":"\/documentation\/app\/packageregistrycontroller\/persistenceclient","title":"let persistenceClient: PersistenceClient","type":"property"},{"path":"\/documentation\/app\/packageregistrycontroller\/releasemetadataactor","title":"let releaseMetadataActor: MemoryCacheActor<PersistenceClient.ReleaseMetadata>","type":"property"},{"path":"\/documentation\/app\/packageregistrycontroller\/serverurlstring","title":"let serverURLString: String","type":"property"},{"path":"\/documentation\/app\/packageregistrycontroller\/tagsactor","title":"let tagsActor: TagsActor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/packageregistrycontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"},{"path":"\/documentation\/app\/packageregistrycontroller\/createpackagerelease(req:)","title":"func createPackageRelease(req: Request) async throws -> PublishResponse","type":"method"},{"path":"\/documentation\/app\/packageregistrycontroller\/downloadsourcearchive(req:)","title":"func downloadSourceArchive(req: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/app\/packageregistrycontroller\/fetchmanifest(req:)","title":"func fetchManifest(req: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/app\/packageregistrycontroller\/fetchreleasemetadata(req:)","title":"func fetchReleaseMetadata(req: Request) async throws -> FetchReleaseMetadata","type":"method"},{"path":"\/documentation\/app\/packageregistrycontroller\/fetchreleasemetadataordownloadsourcearchive(req:)","title":"func fetchReleaseMetadataOrDownloadSourceArchive(req: Request) async throws -> ReleaseMetadataOrSourceArchive","type":"method"},{"path":"\/documentation\/app\/packageregistrycontroller\/listpackagereleases(req:)","title":"func listPackageReleases(req: Request) async throws -> ListPackageReleases","type":"method"},{"path":"\/documentation\/app\/packageregistrycontroller\/login(req:)","title":"func login(req: Request) async throws -> LoginResponse","type":"method"},{"path":"\/documentation\/app\/packageregistrycontroller\/lookuppackageidentifiers(req:)","title":"func lookupPackageIdentifiers(req: Request) async throws -> LookupPackageIdentifiers","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/app\/packageregistrycontroller\/getdatenow-swift.typealias","title":"PackageRegistryController.GetDateNow","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/packageregistrycontroller\/fetchpackageid(githuburl:githubapiclient:databaseactor:database:logger:)","title":"static func fetchPackageID(githubURL: GithubURL, githubAPIClient: GithubAPIClient, databaseActor: DatabaseActor, database: any Database, logger: Logger) async throws -> String?","type":"method"},{"path":"\/documentation\/app\/packageregistrycontroller\/manifestfilepath(cacherootdirectory:manifestfilename:)","title":"static func manifestFilePath(cacheRootDirectory: String, manifestFileName: String) -> String","type":"method"},{"path":"\/documentation\/app\/packageregistrycontroller\/syncmanifests(owner:repo:version:cacherootdirectory:uuidgenerator:githubapiclient:tagsactor:databaseactor:database:fileio:logger:)","title":"static func syncManifests(owner: String, repo: String, version: Version, cacheRootDirectory: String, uuidGenerator: UUIDGenerator, githubAPIClient: GithubAPIClient, tagsActor: TagsActor, databaseActor: DatabaseActor, database: any Database, fileIO: FileIO, logger: Logger) async throws -> [CachedPackageManifest]","type":"method"},{"path":"\/documentation\/app\/packageregistrycontroller\/syncreleasemetadata(owner:repo:version:githubapiclient:persistenceclient:checksumclient:logger:tagsactor:)","title":"static func syncReleaseMetadata(owner: String, repo: String, version: Version, githubAPIClient: GithubAPIClient, persistenceClient: PersistenceClient, checksumClient: ChecksumClient, logger: Logger, tagsActor: TagsActor) async throws -> PersistenceClient.ReleaseMetadata","type":"method"},{"path":"\/documentation\/app\/packageregistrycontroller\/synctags(owner:repo:forcesync:persistenceclient:githubapiclient:logger:now:)","title":"static func syncTags(owner: String, repo: String, forceSync: Bool, persistenceClient: PersistenceClient, githubAPIClient: GithubAPIClient, logger: Logger, now: () -> Date) async throws -> PersistenceClient.TagFile","type":"method"}],"path":"\/documentation\/app\/packageregistrycontroller","title":"PackageRegistryController","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/packagescope\/init(value:)","title":"init(value: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/packagescope\/isvalid","title":"var isValid: Bool","type":"property"},{"path":"\/documentation\/app\/packagescope\/value","title":"var value: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/packagescope\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/app\/packagescope\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/packagescope\/init(_:)","title":"init?(String)","type":"init"}],"path":"\/documentation\/app\/packagescope\/losslessstringconvertible-implementations","title":"LosslessStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/app\/packagescope","title":"PackageScope","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/packagescopeandname\/init(scope:name:)","title":"init(scope: PackageScope, name: PackageName)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/packagescopeandname\/name","title":"var name: PackageName","type":"property"},{"path":"\/documentation\/app\/packagescopeandname\/packageid","title":"var packageId: String","type":"property"},{"path":"\/documentation\/app\/packagescopeandname\/scope","title":"var scope: PackageScope","type":"property"}],"path":"\/documentation\/app\/packagescopeandname","title":"PackageScopeAndName","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/packageversion\/init(value:iszip:)","title":"init(value: String, isZip: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/packageversion\/iszip","title":"var isZip: Bool","type":"property"},{"path":"\/documentation\/app\/packageversion\/semanticversion","title":"var semanticVersion: Version","type":"property"},{"path":"\/documentation\/app\/packageversion\/value","title":"var value: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/packageversion\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/app\/packageversion\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/packageversion\/init(_:)","title":"init?(String)","type":"init"}],"path":"\/documentation\/app\/packageversion\/losslessstringconvertible-implementations","title":"LosslessStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/app\/packageversion","title":"PackageVersion","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/problemdetails\/init()","title":"init()","type":"init"},{"path":"\/documentation\/app\/problemdetails\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/app\/problemdetails\/init(type:title:status:detail:instance:)","title":"init(type: String?, title: String?, status: Int?, detail: String?, instance: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/problemdetails\/detail","title":"var detail: String?","type":"property"},{"path":"\/documentation\/app\/problemdetails\/instance","title":"var instance: String?","type":"property"},{"path":"\/documentation\/app\/problemdetails\/status","title":"var status: Int?","type":"property"},{"path":"\/documentation\/app\/problemdetails\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/app\/problemdetails\/type","title":"var type: String?","type":"property"}],"path":"\/documentation\/app\/problemdetails","title":"ProblemDetails","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/publishresponse\/init()","title":"init()","type":"init"},{"path":"\/documentation\/app\/publishresponse\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/app\/publishresponse\/init(message:url:)","title":"init(message: String?, url: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/publishresponse\/message","title":"var message: String?","type":"property"},{"path":"\/documentation\/app\/publishresponse\/url","title":"var url: String?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/publishresponse\/mock","title":"static let mock: PublishResponse","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/publishresponse\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/app\/publishresponse\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/app\/publishresponse\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/app\/publishresponse\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/publishresponse\/decoderequest(_:)-30i8e","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/app\/publishresponse\/decoderequest(_:)-4wmwz","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/app\/publishresponse\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/publishresponse\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/app\/publishresponse\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/app\/publishresponse","title":"PublishResponse","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/app\/configure(_:environment:cacherootdirectory:githubapiclient:checksumclient:httpstreamclient:persistenceclient:logger:githubapitoken:sqliteconfiguration:uuidgenerator:clientsupportspagination:)","title":"func configure(Application, environment: Environment, cacheRootDirectory: String, githubAPIClient: GithubAPIClient, checksumClient: ChecksumClient, httpStreamClient: HTTPStreamClient, persistenceClient: PersistenceClient, logger: Logger, githubAPIToken: String, sqliteConfiguration: SQLiteConfiguration, uuidGenerator: UUIDGenerator, clientSupportsPagination: Bool) async throws","type":"func"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/app\/entrypoint\/main()","title":"static func main() async throws","type":"method"}],"path":"\/documentation\/app\/entrypoint","title":"Entrypoint","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/app\/releasemetadataorsourcearchive\/fetchreleasemetadata(_:)","title":"case fetchReleaseMetadata(FetchReleaseMetadata)","type":"case"},{"path":"\/documentation\/app\/releasemetadataorsourcearchive\/sourcearchive(_:)","title":"case sourceArchive(Response)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/releasemetadataorsourcearchive\/encoderesponse(for:)","title":"func encodeResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/app\/releasemetadataorsourcearchive\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) async throws -> Response","type":"method"}],"path":"\/documentation\/app\/releasemetadataorsourcearchive\/asyncresponseencodable-implementations","title":"AsyncResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/app\/releasemetadataorsourcearchive","title":"ReleaseMetadataOrSourceArchive","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/app\/swiftpackageregistryserviceerror\/manifesthasnoswifttoolsversion(owner:repo:version:swiftversion:)","title":"case manifestHasNoSwiftToolsVersion(owner: String, repo: String, version: String, swiftVersion: String?)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/swiftpackageregistryserviceerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/app\/swiftpackageregistryserviceerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/app\/swiftpackageregistryserviceerror","title":"SwiftPackageRegistryServiceError","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/apiutilities\/githuburl\/asinput","title":"var asInput: GithubAPIClient.ListRepositoryTags.Input","type":"property"},{"path":"\/documentation\/app\/apiutilities\/githuburl\/packageidentifier","title":"var packageIdentifier: String","type":"property"}],"path":"\/documentation\/app\/apiutilities\/githuburl","title":"GithubURL","type":"extension"}],"path":"\/documentation\/app\/apiutilities","title":"APIUtilities","type":"extension"},{"children":[{"title":"Extended Types","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/repository\/ensureowner(_:)","title":"func ensureOwner(String) -> GithubAPIClient.Repository","type":"method"}],"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/repository","title":"GithubAPIClient.Repository","type":"extension"},{"title":"Extended Types","type":"groupMarker"},{"children":[{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/getcontent\/output\/isok","title":"var isOK: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/getcontent\/output\/linkheader(serverurl:owner:repo:version:swiftversion:manifests:)","title":"func linkHeader(serverURL: String, owner: String, repo: String, version: String, swiftVersion: String?, manifests: [APIUtilities.Manifest.FileName]) -> String","type":"method"}],"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/getcontent\/output","title":"GithubAPIClient.GetContent.Output","type":"extension"}],"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/getcontent","title":"GithubAPIClient.GetContent","type":"extension"},{"children":[{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/getreleasebytagname\/output\/isok","title":"var isOK: Bool","type":"property"},{"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/getreleasebytagname\/output\/publishedat","title":"var publishedAt: Date?","type":"property"},{"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/getreleasebytagname\/output\/release","title":"var release: GithubAPIClient.Release","type":"property"},{"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/getreleasebytagname\/output\/zipballurl","title":"var zipBallURL: String?","type":"property"}],"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/getreleasebytagname\/output","title":"GithubAPIClient.GetReleaseByTagName.Output","type":"extension"}],"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/getreleasebytagname","title":"GithubAPIClient.GetReleaseByTagName","type":"extension"},{"children":[{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/getrepository\/output\/torepository(ownerfromrequest:)","title":"func toRepository(ownerFromRequest: String) throws -> GithubAPIClient.Repository?","type":"method"}],"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/getrepository\/output","title":"GithubAPIClient.GetRepository.Output","type":"extension"}],"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/getrepository","title":"GithubAPIClient.GetRepository","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/listrepositorytags\/input\/updatepageinfo(_:)","title":"func updatePageInfo(APIUtilities.PageInfo)","type":"method"}],"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/listrepositorytags\/input","title":"GithubAPIClient.ListRepositoryTags.Input","type":"extension"},{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/listrepositorytags\/output\/nextpage","title":"var nextPage: APIUtilities.PageInfo?","type":"property"},{"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/listrepositorytags\/output\/tags","title":"var tags: [GithubAPIClient.ListRepositoryTags.OKBody.Tag]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/listrepositorytags\/output\/updatewithnextpage(_:)","title":"func updateWithNextPage(GithubAPIClient.ListRepositoryTags.Output)","type":"method"}],"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/listrepositorytags\/output","title":"GithubAPIClient.ListRepositoryTags.Output","type":"extension"},{"title":"Extended Types","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/listrepositorytags\/okbody\/tag\/astag","title":"var asTag: PersistenceClient.Tag","type":"property"}],"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/listrepositorytags\/okbody\/tag","title":"GithubAPIClient.ListRepositoryTags.OKBody.Tag","type":"extension"}],"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/listrepositorytags\/okbody","title":"GithubAPIClient.ListRepositoryTags.OKBody","type":"extension"}],"path":"\/documentation\/app\/githubapiclient\/githubapiclient\/listrepositorytags","title":"GithubAPIClient.ListRepositoryTags","type":"extension"}],"path":"\/documentation\/app\/githubapiclient\/githubapiclient","title":"GithubAPIClient","type":"extension"}],"path":"\/documentation\/app\/githubapiclient","title":"GithubAPIClient","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/httptypes\/httpresponse\/aslistpackagereleases","title":"var asListPackageReleases: ListPackageReleases","type":"property"}],"path":"\/documentation\/app\/httptypes\/httpresponse","title":"HTTPResponse","type":"extension"}],"path":"\/documentation\/app\/httptypes","title":"HTTPTypes","type":"extension"},{"children":[{"title":"Extended Types","type":"groupMarker"},{"children":[{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/sqlitekit\/sqliteconfiguration\/storage\/ismemory","title":"var isMemory: Bool","type":"property"}],"path":"\/documentation\/app\/sqlitekit\/sqliteconfiguration\/storage","title":"SQLiteConfiguration.Storage","type":"extension"}],"path":"\/documentation\/app\/sqlitekit\/sqliteconfiguration","title":"SQLiteConfiguration","type":"extension"}],"path":"\/documentation\/app\/sqlitekit","title":"SQLiteKit","type":"extension"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/vapor\/application\/serverurl","title":"var serverURL: String","type":"property"}],"path":"\/documentation\/app\/vapor\/application","title":"Application","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/app\/vapor\/request\/fetchpackagemetadataurl","title":"var fetchPackageMetadataURL: String","type":"property"},{"path":"\/documentation\/app\/vapor\/request\/packagename","title":"var packageName: PackageName","type":"property"},{"path":"\/documentation\/app\/vapor\/request\/packagescope","title":"var packageScope: PackageScope","type":"property"},{"path":"\/documentation\/app\/vapor\/request\/packagescopeandname","title":"var packageScopeAndName: PackageScopeAndName","type":"property"},{"path":"\/documentation\/app\/vapor\/request\/packageversion","title":"var packageVersion: PackageVersion","type":"property"},{"path":"\/documentation\/app\/vapor\/request\/serverurl","title":"var serverURL: String","type":"property"},{"path":"\/documentation\/app\/vapor\/request\/unversionedmanifesturl","title":"var unversionedManifestURL: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/app\/vapor\/request\/checkacceptheader(expectedmediatype:)","title":"func checkAcceptHeader(expectedMediaType: SwiftRegistryAcceptHeader.MediaType) throws","type":"method"}],"path":"\/documentation\/app\/vapor\/request","title":"Request","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/app\/vapor\/abort\/init(_:headers:title:instance:file:function:line:column:)","title":"init(HTTPResponseStatus, headers: HTTPHeaders, title: String, instance: String?, file: String, function: String, line: UInt, column: UInt)","type":"init"}],"path":"\/documentation\/app\/vapor\/abort","title":"Abort","type":"extension"}],"path":"\/documentation\/app\/vapor","title":"Vapor","type":"extension"}],"path":"\/documentation\/app","title":"App","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}
{"metadata":{"role":"article","roleHeading":"Article","modules":[{"name":"App"}],"title":"Configuring Swift Package Manager"},"variants":[{"paths":["\/documentation\/app\/configuringspm"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/App\/documentation\/App"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/App\/documentation\/App\/ConfiguringSPM"},"seeAlsoSections":[{"identifiers":["doc:\/\/App\/documentation\/App\/GettingStarted","doc:\/\/App\/documentation\/App\/GithubAPI","doc:\/\/App\/documentation\/App\/Architecture","doc:\/\/App\/documentation\/App\/SpecificationSupport"],"title":"Essentials","generated":true,"anchor":"Essentials"}],"primaryContentSections":[{"content":[{"type":"heading","anchor":"Configuring-Swift-Package-Manager-using-the-command-line","level":2,"text":"Configuring Swift Package Manager using the command line"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You will need to configure Swift Package Manager to be aware of the package registry server."},{"type":"text","text":" "},{"type":"text","text":"If you are running "},{"type":"codeVoice","code":"swift-package-registy-server"},{"type":"text","text":" as localhost, then you can"},{"type":"text","text":" "},{"type":"text","text":"tell Swift Package Manager this as follows:"}]},{"type":"codeListing","syntax":null,"code":["$ swift package-registry set --global --allow-insecure-http http:\/\/127.0.0.1:8080"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will place this information in "},{"type":"codeVoice","code":"~\/.swiftpm\/configuration\/registries.json"},{"type":"text","text":" and will"},{"type":"text","text":" "},{"type":"text","text":"be global for all packages and projects on this machine."}]},{"type":"paragraph","inlineContent":[{"text":"On the other hand, if you only want to configure a single package or project, then leave","type":"text"},{"text":" ","type":"text"},{"text":"out the ","type":"text"},{"code":"--global","type":"codeVoice"},{"text":" flag above:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["$ cd ~\/src\/some-project-to-configure","$ swift package-registry set --allow-insecure-http http:\/\/127.0.0.1:8080"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"then this will place this information in "},{"type":"codeVoice","code":"~\/src\/some-project-to-configure\/.swiftpm\/configuration\/registries.json"},{"type":"text","text":" "},{"type":"text","text":"and thus will only apply to "},{"type":"codeVoice","code":"some-project-to-configure"},{"type":"text","text":"."}]},{"type":"heading","anchor":"Changing-your-Packageswift-to-use-package-identifiers","level":2,"text":"Changing your Package.swift to use package identifiers"},{"type":"paragraph","inlineContent":[{"text":"Normally, we are used to adding Github dependencies to a package manifest like this:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let package = Package(","    name: \"MyPackage\",","    ...,","    dependencies: [","        .package(url: \"https:\/\/github.com\/apple\/swift-async-algorithms\", from: \"1.0.0\"),","        .package(url: \"https:\/\/github.com\/apple\/swift-collections.git\", from: \"1.1.4\"),","    ],","    targets: [","        .target(","            name: \"MyTarget\",","            dependencies: [","                .product(name: \"AsyncAlgorithms\", package: \"swift-async-algorithms\"),","                .product(name: \"Collections\", package: \"swift-collections\"),","            ]","        ),","    ],","    ...,",")"]},{"type":"paragraph","inlineContent":[{"text":"However, if you want to use the package registry, then we would use package identifiers instead","type":"text"},{"text":" ","type":"text"},{"text":"(in both the package-level and target-level dependencies):","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let package = Package(","    name: \"MyPackage\",","    ...,","    dependencies: [","        .package(id: \"apple.swift-async-algorithms\", from: \"1.0.0\"),","        .package(id: \"apple.swift-collections\", from: \"1.1.4\"),","    ],","    targets: [","        .target(","            name: \"MyTarget\",","            dependencies: [","                .product(name: \"AsyncAlgorithms\", package: \"apple.swift-async-algorithms\"),","                .product(name: \"Collections\", package: \"apple.swift-collections\"),","            ]","        ),","    ],","    ...,",")"]},{"type":"heading","anchor":"Handling-transitive-dependencies","level":2,"text":"Handling transitive dependencies"},{"type":"paragraph","inlineContent":[{"text":"In the ","type":"text"},{"code":"MyPackage","type":"codeVoice"},{"text":" example above, have ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"direct"}]},{"text":" dependency upon ","type":"text"},{"code":"swift-async-algorithms","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"swift-collections","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"However, if you look at the ","type":"text"},{"type":"codeVoice","code":"Package.swift"},{"text":" for ","type":"text"},{"type":"codeVoice","code":"swift-async-algorithms"},{"text":":","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let package = Package(","  name: \"swift-async-algorithms\",","  ...,","  dependencies: [","    .package(url: \"https:\/\/github.com\/apple\/swift-collections.git\", from: \"1.0.4\"),","    .package(url: \"https:\/\/github.com\/apple\/swift-docc-plugin\", from: \"1.0.0\"),","  ],","  ...,"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"then we see that "},{"code":"swift-async-algorithms","type":"codeVoice"},{"type":"text","text":" depends on "},{"code":"swift-collections","type":"codeVoice"},{"type":"text","text":" and "},{"code":"swift-docc-plugin","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"So "},{"code":"MyPackage","type":"codeVoice"},{"type":"text","text":" has a "},{"inlineContent":[{"type":"text","text":"transitive"}],"type":"strong"},{"type":"text","text":" dependency upon "},{"code":"swift-collections","type":"codeVoice"},{"type":"text","text":" and "},{"code":"swift-docc-plugin","type":"codeVoice"},{"type":"text","text":". Therefore,"},{"type":"text","text":" "},{"code":"MyPackage","type":"codeVoice"},{"type":"text","text":" has the following dependencies:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"A ","type":"text"},{"inlineContent":[{"text":"direct","type":"text"}],"type":"strong"},{"text":" dependency upon ","type":"text"},{"code":"swift-async-algorithms","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Both a ","type":"text"},{"inlineContent":[{"text":"direct","type":"text"}],"type":"strong"},{"text":" AND a ","type":"text"},{"inlineContent":[{"type":"text","text":"transitive"}],"type":"strong"},{"text":" dependency upon ","type":"text"},{"code":"swift-collections","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"strong","inlineContent":[{"type":"text","text":"transitive"}]},{"type":"text","text":" dependency upon "},{"code":"swift-docc-plugin","type":"codeVoice"},{"type":"text","text":"."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For the "},{"type":"codeVoice","code":"swift-collection"},{"type":"text","text":" dependency:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Our ","type":"text"},{"inlineContent":[{"type":"text","text":"direct"}],"type":"strong"},{"text":" dependency is via a package identifier","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Our "},{"type":"strong","inlineContent":[{"type":"text","text":"transitive"}]},{"type":"text","text":" dependency is via a Github URL."}]}]}]},{"type":"paragraph","inlineContent":[{"text":"So the question becomes: how should Swift Package Manager treat the two different ","type":"text"},{"code":"swift-collection","type":"codeVoice"},{"text":" dependencies?","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"As explained "},{"type":"reference","identifier":"https:\/\/github.com\/swiftlang\/swift-package-manager\/blob\/main\/Documentation\/PackageRegistry\/PackageRegistryUsage.md#using-registry-for-source-control-dependencies","isActive":true},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"we have three choices:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Option 1"}]},{"type":"text","text":" Treat “apple.swift-collections” and “https:\/\/github.com\/apple\/swift-collections.git” as"},{"type":"text","text":" "},{"type":"text","text":"completely different dependencies. The “apple.swift-collections” dependency will be resolved via the package registry, and “https:\/\/github.com\/apple\/swift-collections.git” will be resolved by cloning the respository."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"text":"Note that this option will likely result in duplicate symbol errors","type":"text"}]},{"type":"text","text":", since the identical library"},{"type":"text","text":" "},{"type":"text","text":"is included twice."}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Option 2","type":"text"}]},{"text":". Still fetch “apple.swift-collections” from the registry and clone","type":"text"},{"text":" ","type":"text"},{"text":"“https:\/\/github.com\/apple\/swift-collections.git”, but use the registry “lookup identifier” endpoint","type":"text"},{"text":" ","type":"text"},{"text":"to determine if they are, in fact, the same dependency.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Option 3"}],"type":"strong"},{"text":". Use to registry’s “lookup identifier” endpoint to determine whether or not","type":"text"},{"text":" ","type":"text"},{"text":"“https:\/\/github.com\/apple\/swift-collections.git” is, in fact, the same as “apple.swift-collections”.","type":"text"},{"text":" ","type":"text"},{"text":"If it is, then replace all usages of “https:\/\/github.com\/apple\/swift-collections.git” with “apple.swift-collections” and use the registry whenever possible.","type":"text"}]}]}]},{"type":"heading","anchor":"Specifying-transitive-dependency-policy-via-command-line","level":2,"text":"Specifying transitive dependency policy via command line"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If we are building using the "},{"type":"codeVoice","code":"swift"},{"type":"text","text":" command line, then we specify the above transitive dependency handling options like this:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Option 1: "},{"type":"codeVoice","code":"--disable-scm-to-registry-transformation"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Option 2: "},{"code":"--use-registry-identity-for-scm","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Option 3: ","type":"text"},{"code":"--replace-scm-with-registry","type":"codeVoice"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example:"}]},{"type":"codeListing","syntax":null,"code":["$ cd ~\/src\/my-package","$ swift build --replace-scm-with-registry"]},{"type":"heading","anchor":"Specifying-transitive-dependency-policy-via-xcodebuild","level":2,"text":"Specifying transitive dependency policy via xcodebuild"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you are building using "},{"type":"codeVoice","code":"xcodebuild"},{"type":"text","text":", then you specify the transitive dependency policy via"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"-packageDependencySCMToRegistryTransformation"},{"type":"text","text":" option:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Option 1: "},{"type":"codeVoice","code":"-packageDependencySCMToRegistryTransformation none"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Option 2: "},{"type":"codeVoice","code":"-packageDependencySCMToRegistryTransformation useRegistryIdentity"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Option 3: "},{"type":"codeVoice","code":"-packageDependencySCMToRegistryTransformation useRegistryIdentityAndSources"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Side note: if building via "},{"type":"codeVoice","code":"xcodebuild"},{"type":"text","text":" you can also specify the default registry URL via"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"-defaultPackageRegistryURL"},{"type":"text","text":" option:"}]},{"type":"codeListing","syntax":null,"code":["xcodebuild -defaultPackageRegistryURL \"http:\/\/127.0.0.1:8080\/\""]},{"type":"heading","anchor":"Specifying-transitive-dependency-in-Xcode","level":2,"text":"Specifying transitive dependency in Xcode"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can tell Xcode how to resolve transitive dependencies by setting an Xcode default:"}]},{"type":"codeListing","syntax":null,"code":["$ defaults write com.apple.dt.Xcode IDEPackageDependencySCMToRegistryTransformation <xcodebuild-option>"]},{"type":"paragraph","inlineContent":[{"text":"where ","type":"text"},{"type":"codeVoice","code":"xcodebuild-option"},{"text":" are the same as the options above for ","type":"text"},{"type":"codeVoice","code":"xcodebuild"},{"text":":","type":"text"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Option 1: "},{"code":"none","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"text":"Option 2: ","type":"text"},{"code":"useRegistryIdentity","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Option 3: "},{"code":"useRegistryIdentityAndSources","type":"codeVoice"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"For example, if you wanted the equivalent of the command-line ","type":"text"},{"type":"codeVoice","code":"--replace-scm-with-registry"},{"text":" option, you would do:","type":"text"}]},{"type":"codeListing","syntax":null,"code":["$ defaults write com.apple.dt.Xcode IDEPackageDependencySCMToRegistryTransformation useRegistryIdentityAndSources"]}],"kind":"content"}],"kind":"article","abstract":[{"type":"text","text":"Learn how to configure your Swift Package Manager to use the package registry."}],"references":{"doc://App/documentation/App/Architecture":{"abstract":[{"text":"This article describes the architecture of the Swift Package Registry Service.","type":"text"}],"title":"Architecture","role":"article","kind":"article","type":"topic","identifier":"doc:\/\/App\/documentation\/App\/Architecture","url":"\/documentation\/app\/architecture"},"doc://App/documentation/App/GithubAPI":{"role":"article","type":"topic","kind":"article","abstract":[{"text":"We can implement a Swift Package Registry Service by using these four operations in the Github API:","type":"text"}],"identifier":"doc:\/\/App\/documentation\/App\/GithubAPI","url":"\/documentation\/app\/githubapi","title":"Github API"},"doc://App/documentation/App/GettingStarted":{"title":"Getting started","role":"article","abstract":[{"type":"text","text":"Learn how to build and run the Swift Package Registry Service."}],"url":"\/documentation\/app\/gettingstarted","kind":"article","type":"topic","identifier":"doc:\/\/App\/documentation\/App\/GettingStarted"},"doc://App/documentation/App":{"title":"App","url":"\/documentation\/app","role":"collection","kind":"symbol","identifier":"doc:\/\/App\/documentation\/App","abstract":[{"type":"text","text":"The Swift Package Registry Service is a Vapor-based web service which implements the Swift Package Registry Service Specification by proxying and caching the Github API."}],"type":"topic"},"doc://App/documentation/App/SpecificationSupport":{"title":"Specification Support","type":"topic","abstract":[{"text":"See the status of each feature in the Swift Package Registry Service specification.","type":"text"}],"identifier":"doc:\/\/App\/documentation\/App\/SpecificationSupport","role":"article","kind":"article","url":"\/documentation\/app\/specificationsupport"},"https://github.com/swiftlang/swift-package-manager/blob/main/Documentation/PackageRegistry/PackageRegistryUsage.md#using-registry-for-source-control-dependencies":{"title":"here","titleInlineContent":[{"text":"here","type":"text"}],"type":"link","identifier":"https:\/\/github.com\/swiftlang\/swift-package-manager\/blob\/main\/Documentation\/PackageRegistry\/PackageRegistryUsage.md#using-registry-for-source-control-dependencies","url":"https:\/\/github.com\/swiftlang\/swift-package-manager\/blob\/main\/Documentation\/PackageRegistry\/PackageRegistryUsage.md#using-registry-for-source-control-dependencies"}}}